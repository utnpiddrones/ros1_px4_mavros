<?xml version="1.0"?>
<sdf version='1.7'>
	<model name='drone_utn'> <!-- Nota: el dron esta mirando en sentido de las X+. Hacia "adelante" es X+. -->

    <!-- Link = Cuerpo rígido del Frame del drone -->
  	<link name='base_link'>
      <pose relative_to='drone_utn'> 0 0 0 0 0 0</pose> 			<!-- Esta es la ubicación del cuerpo respecto del sistema de referencia del model  -->
      <inertial>
        <pose>0 0 30.3e-3 0 0 0</pose>			<!-- Esta es la posición del centro de masa respecto del sistema de referencia del model-->

        <mass>1.82993</mass>			<!-- Masa total del cuerpo, sin las helices ni imus -->

        <inertia>			<!-- Esto incluye los momentos de inercia de los motores, sin las helices. -->

          <!--Medidas por el onshape desplazado-->
          <ixx> 35715.096e-6 </ixx>
          <ixy> -12.103e-6 </ixy>
          <ixz> -2.039e-6 </ixz>

          <iyy> 35718.526e-6 </iyy>
          <iyz> -1.485e-6 </iyz>

          <izz> 68783.141e-6 </izz>		<!-- no existen los tags iyx, izx , izy porque son redundantes por simetría -->

        </inertia>

      </inertial>

      <!-- Esta sección determina la geometría que se va a usar para las colisiones del link -->
      <collision name='base_link_inertia_collision'>
        <pose> 0 0 0 0 0 0</pose>
        <!-- La geometría de las collision box hay que modificarlas porque no se ajustan -->
        <geometry>
          <box>
            <size>0.47 0.47 0.11</size>
          </box>
        </geometry>
        <!-- Hay que dejar el surface porque se modifican los valores por default de la simulación ODE -->
				<surface>
          <contact>
            <ode>
              <min_depth>0.001</min_depth>
              <max_vel>0</max_vel>
            </ode>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>

      <!-- Esta sección determina la ubicación y geometría del dibujito que va a tener el link -->
      <visual name='base_link_visual'>
        <pose> 0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>		<!-- Como usamos los modelos importados del onshape, ya vienen con la escala real -->
            <uri>model://drone_utn/meshes/base_link.obj</uri>		<!-- Esto es la ubicación relativa del archivo .obj que determina la geometría. Exportado directamente desde onShape -->
          </mesh>
        </geometry>
        <material>	<!-- Material solo determina como se renderiza la imagen del visual. Aca le pusimos color purple -->
          <script>
            <name>Gazebo/White</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>

    <!-- IMU -->
    <link name='imu_link'>
      <pose relative_to='drone_utn'> 0 0 0 0 0 0 </pose>
      <inertial>
        <pose>0 0 0 0 0 0</pose>
        <mass> 0.015 </mass>
        <inertia>
          <ixx>1e-05</ixx>
          <iyy>1e-05</iyy>
          <izz>1e-05</izz>
        </inertia>
      </inertial>
    </link>

		<!-- Helice 0 ( CW )-->
    <!-- Nota: Hay que modificar los parametros para las helices. Estamos probando con helices que no se corresponden con las que tenemos nosotros -->
    <!-- Nota2: Las helices CW y CCW no comparten los momentos de inercia. -->
    <link name='rotor_0'>
      <pose relative_to='drone_utn'> 119e-3 119e-3 0.062676 0 0 0</pose>
      <inertial>
        <pose> 0 0 0 0 0 0 </pose>
        <mass>0.01</mass>
        <inertia>
          <ixx>8.4464e-07</ixx>
          <ixy>-7.2191e-07</ixy>
          <ixz>5.3515e-13</ixz>
          <iyy>6.4014e-07</iyy>
          <iyz>5.5137e-13</iyz>
          <izz>1.4805e-06</izz>
        </inertia>
      </inertial>
      <collision name='rotor_0_collision'>
        <pose> 0 0 0 0 0 0 </pose>
        <geometry>
          <cylinder>
            <length>0.005</length>
            <radius>0.128</radius>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='rotor_0_visual'>
        <pose> 0 0 0 0 0 0 </pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://drone_utn/meshes/propeller_0.STL</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/BlueTransparent</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>

    <!-- Helice 1 (CCW) -->
    <link name='rotor_1'>
    	<pose relative_to='drone_utn'>119e-3 -119e-3 0.062676 0 0 0</pose>
      <inertial>
        <pose>0 0 0 0 0 0</pose>
        <mass>0.01</mass>
        <inertia>
          <ixx>8.5496e-07</ixx>
          <ixy>7.1953e-07</ixy>
          <ixz>-4.1012e-13</ixz>
          <iyy>6.2836e-07</iyy>
          <iyz>5.491e-13</iyz>
          <izz>1.479e-06</izz>
        </inertia>
      </inertial>
      <collision name='rotor_1_collision'>
        <pose> 0 0 0 0 0 0 </pose>
        <geometry>
          <cylinder>
            <length>0.005</length>
            <radius>0.128</radius>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='rotor_1_visual'>
        <pose> 0 0 0 0 0 0 </pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://drone_utn/meshes/propeller_0.STL</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/RedTransparent</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>

    <!-- Helice 2 (CW) -->
    <link name='rotor_2'>
     <pose relative_to='drone_utn'> -119e-3 -119e-3 0.062676 0 0 0</pose>
      <inertial>
        <pose>0 0 0 0 0 0</pose>
        <mass>0.01</mass>
        <inertia>
          <ixx>8.4464e-07</ixx>
          <ixy>-7.2191e-07</ixy>
          <ixz>4.5077e-13</ixz>
          <iyy>6.4014e-07</iyy>
          <iyz>4.5674e-13</iyz>
          <izz>1.4805e-06</izz>
        </inertia>
      </inertial>
      <collision name='rotor_2_collision'>
        <pose> 0 0 0 0 0 0 </pose>
        <geometry>
          <cylinder>
            <length>0.005</length>
            <radius>0.128</radius>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='rotor_2_visual'>
        <pose> 0 0 0 0 0 0 </pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://drone_utn/meshes/propeller_1.STL</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/BlueTransparent</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>

    <!-- Helice 3 (CCW) -->
    <link name='rotor_3'>
      <pose relative_to='drone_utn'> -119e-3 119e-3 0.062676 0 0 0</pose>
      <inertial>
        <pose>0 0 0 0 0 0</pose>
        <mass>0.01</mass>
        <inertia>
          <ixx>8.5496e-07</ixx>
          <ixy>7.1953e-07</ixy>
          <ixz>-4.184e-13</ixz>
          <iyy>6.2836e-07</iyy>
          <iyz>5.3609e-13</iyz>
          <izz>1.479e-06</izz>
        </inertia>
      </inertial>
      <collision name='rotor_3_collision'>
        <pose> 0 0 0 0 0 0 </pose>
        <geometry>
          <cylinder>
            <length>0.005</length>
            <radius>0.128</radius>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='rotor_3_visual'>
        <pose> 0 0 0 0 0 0 </pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://drone_utn/meshes/propeller_1.STL</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/RedTransparent</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>


    <model name='gps0'>		<!-- Estamos haciendo composicióon de objetos -->
      <link name='link'>
        <pose relative_to='drone_utn'>0 0 0 0 0 0</pose>
        <inertial>
          <pose>0 0 0 0 0 0</pose>
          <mass>0.01</mass>
          <inertia>
            <ixx>2.1733e-06</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>2.1733e-06</iyy>
            <iyz>0</iyz>
            <izz>1.8e-07</izz>
          </inertia>
        </inertial>
        <visual name='visual'>
          <geometry>
            <cylinder>
              <radius>0.01</radius>
              <length>0.002</length>
            </cylinder>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Black</name>
              <uri>__default__</uri>
            </script>
          </material>
        </visual>

        <sensor name='gps' type='gps'> <!-- Queda pendiente por analizar -->
          <pose>0 0 0 0 0 0</pose>
          <plugin name='gps_plugin' filename='libgazebo_gps_plugin.so'>
            <robotNamespace/>
            <gpsNoise>1</gpsNoise>
            <gpsXYRandomWalk>2.0</gpsXYRandomWalk>
            <gpsZRandomWalk>4.0</gpsZRandomWalk>
            <gpsXYNoiseDensity>0.0002</gpsXYNoiseDensity>
            <gpsZNoiseDensity>0.0004</gpsZNoiseDensity>
            <gpsVXYNoiseDensity>0.2</gpsVXYNoiseDensity>
            <gpsVZNoiseDensity>0.4</gpsVZNoiseDensity>
          </plugin>
        </sensor>
      </link>
    </model>

		<!-- Bateria (carga) -->
		<link name='battery_link'>
			<pose relative_to='drone_utn'> 0 0 -13.1e-3 0 0 0</pose>
      <inertial>
        <pose>0 0 0 0 0 0</pose>
        <mass>250e-3</mass>
        <inertia>
          <ixx> 133.987e-6 </ixx>
          <ixy> 98.351e-6 </ixy>
          <ixz> 0 </ixz>

          <iyy> 133.987e-6 </iyy>
          <iyz> 0 </iyz>

          <izz> 241.8e-6 </izz>
        </inertia>
      </inertial>

      <visual name='battery_link_visual'>
        <pose> 0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://drone_utn/meshes/battery_link.obj</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Black</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
		</link>

		<!-- Kinect -->
		
		<model name="kinect">
	    <pose>0 0 80e-3 0 0 0</pose>
	    <link name="link">
	      <inertial>
	        <mass>0.1</mass>
	      </inertial>

				<!-- Sacamos las colisiones para simular unicamente el efecto de la camara -->
	      <collision name="collision">
	        <geometry>
	          <box>
	            <size>1e-3 1e-3 1e-3</size>
	          </box>
	        </geometry>
	      </collision>

	      <visual name="visual">
					<pose>25e-3 0 0 0 0 0</pose> <!-- Esto es porque el modelo 3D esta centrado en una esquina -->
	        <geometry>
	          <mesh>
	            <uri>model://drone_utn/meshes/kinect.dae</uri>
	          </mesh>
	        </geometry>
					<material>	<!-- Material solo determina como se renderiza la imagen del visual. Aca le pusimos color purple -->
	          <script>
	            <name>Gazebo/Black</name>
	            <uri>file://media/materials/scripts/gazebo.material</uri>
	          </script>
	        </material>
	      </visual>

				<sensor name="camera" type="depth">
	        <update_rate>20</update_rate>
	        <camera>
	          <horizontal_fov>1.047198</horizontal_fov>
	          <image>
	            <width>640</width>
	            <height>480</height>
	            <format>R8G8B8</format>
	          </image>
	          <clip>
	            <near>0.05</near>
	            <far>3</far>
	          </clip>
	        </camera>
					<plugin name="camera_plugin" filename="libgazebo_ros_openni_kinect.so">
						<baseline>0.2</baseline>
						<alwaysOn>true</alwaysOn>
						<updateRate>0.0</updateRate>
						<cameraName>camera_ir</cameraName>
						<imageTopicName>/camera/color/image_raw</imageTopicName>
						<cameraInfoTopicName>/camera/color/camera_info</cameraInfoTopicName>
						<depthImageTopicName>/camera/depth/image_raw</depthImageTopicName>
						<depthImageCameraInfoTopicName>/camera/depth/camera_info</depthImageCameraInfoTopicName>
						<pointCloudTopicName>/camera/depth/points</pointCloudTopicName>
						<frameName>camera_link</frameName>
						<pointCloudCutoff>0.5</pointCloudCutoff>
						<pointCloudCutoffMax>3.0</pointCloudCutoffMax>
						<distortionK1>0</distortionK1>
						<distortionK2>0</distortionK2>
						<distortionK3>0</distortionK3>
						<distortionT1>0</distortionT1>
						<distortionT2>0</distortionT2>
						<CxPrime>0</CxPrime>
						<Cx>0</Cx>
						<Cy>0</Cy>
						<focalLength>0</focalLength>
						<hackBaseline>0</hackBaseline>
					</plugin>
	      </sensor>
	    </link>
  	</model>


  <!-- ============== Joints ======================= -->
    <joint name='imu_joint' type='fixed'>
      <child>imu_link</child>
      <parent>base_link</parent>
			<!--
      <axis>
        <xyz>1 0 0</xyz>
        <limit>
          <lower>0</lower>
          <upper>0</upper>
          <effort>0</effort>
          <velocity>0</velocity>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
			-->
    </joint>

		<joint name='battery_joint' type='fixed'>
			<child>battery_link</child>
			<parent>base_link</parent>
		</joint>

    <joint name='rotor_0_joint' type='revolute'>
      <child>rotor_0</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>

    <joint name='rotor_1_joint' type='revolute'>
      <child>rotor_1</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>

    <joint name='rotor_2_joint' type='revolute'>
      <child>rotor_2</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>

    <joint name='rotor_3_joint' type='revolute'>
      <child>rotor_3</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>

    <joint name='gps0_joint' type='fixed'>
      <parent>base_link</parent>
      <child>gps0::link</child>
    </joint>

		<joint name='kinect_joint' type='fixed'>
      <parent>base_link</parent>
      <child>kinect::link</child>
    </joint>

    <!-- ============== Plugins ======================= -->

		<!-- Motor 1 Plugin - Rotor 0 (CW)-->
    <plugin name='front_left_motor_model' filename='libgazebo_motor_model.so'>
      <robotNamespace/>
      <jointName>rotor_0_joint</jointName>
      <linkName>rotor_0</linkName>
      <turningDirection>cw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>1000</maxRotVelocity>
      <motorConstant>12.8627e-06</motorConstant>
      <momentConstant>0.017</momentConstant>
      <commandSubTopic>/gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>2</motorNumber>
      <rotorDragCoefficient>0.000806428</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>/motor_speed/2</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
      <joint_control_pid>
        <p>0.1</p>
        <i>0</i>
        <d>0</d>
        <iMax>0</iMax>
        <iMin>0</iMin>
        <cmdMax>3</cmdMax>
        <cmdMin>-3</cmdMin>
      </joint_control_pid>
    </plugin>

    <!-- Motor 2 Plugin - Rotor 1 (CW)-->
    <plugin name='front_right_motor_model' filename='libgazebo_motor_model.so'>
      <robotNamespace/>
      <jointName>rotor_1_joint</jointName>
      <linkName>rotor_1</linkName>
      <turningDirection>ccw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>1000</maxRotVelocity>
      <motorConstant>12.8627e-06</motorConstant>
      <momentConstant>0.017</momentConstant>
      <commandSubTopic>/gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>0</motorNumber>
      <rotorDragCoefficient>0.000806428</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>/motor_speed/0</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
      <joint_control_pid>
        <p>0.1</p>
        <i>0</i>
        <d>0</d>
        <iMax>0</iMax>
        <iMin>0</iMin>
        <cmdMax>3</cmdMax>
        <cmdMin>-3</cmdMin>
      </joint_control_pid>
    </plugin>

		<!-- Motor 3 Plugin - Rotor 2 (CW)-->
    <plugin name='back_right_motor_model' filename='libgazebo_motor_model.so'>
      <robotNamespace/>
      <jointName>rotor_2_joint</jointName>
      <linkName>rotor_2</linkName>
      <turningDirection>cw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>1000</maxRotVelocity>
      <motorConstant>12.8627e-06</motorConstant>
      <momentConstant>0.017</momentConstant>
      <commandSubTopic>/gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>3</motorNumber>
      <rotorDragCoefficient>0.000806428</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>/motor_speed/3</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
      <joint_control_pid>
        <p>0.1</p>
        <i>0</i>
        <d>0</d>
        <iMax>0</iMax>
        <iMin>0</iMin>
        <cmdMax>3</cmdMax>
        <cmdMin>-3</cmdMin>
      </joint_control_pid>
    </plugin>

    <!-- Motor 4 Plugin - Rotor 3 (CW)-->
    <plugin name='back_left_motor_model' filename='libgazebo_motor_model.so'>
      <robotNamespace/>
      <jointName>rotor_3_joint</jointName>
      <linkName>rotor_3</linkName>
      <turningDirection>ccw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>1000</maxRotVelocity>
      <motorConstant>12.8627e-06</motorConstant>
      <momentConstant>0.017</momentConstant>
      <commandSubTopic>/gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>1</motorNumber>
      <rotorDragCoefficient>0.000806428</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>/motor_speed/1</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
      <joint_control_pid>
        <p>0.1</p>
        <i>0</i>
        <d>0</d>
        <iMax>0</iMax>
        <iMin>0</iMin>
        <cmdMax>3</cmdMax>
        <cmdMin>-3</cmdMin>
      </joint_control_pid>
    </plugin>





    <!--Ground Truth-->
    <plugin name='groundtruth_plugin' filename='libgazebo_groundtruth_plugin.so'>
      <robotNamespace/>
    </plugin>

    <!-- Magnetometer Plugin-->
    <plugin name='magnetometer_plugin' filename='libgazebo_magnetometer_plugin.so'>
      <robotNamespace/>
      <pubRate>100</pubRate>
      <noiseDensity>0.0004</noiseDensity>
      <randomWalk>6.4e-06</randomWalk>
      <biasCorrelationTime>600</biasCorrelationTime>
      <magTopic>/mag</magTopic>
    </plugin>

    <!-- Barometer Plugin-->
    <plugin name='barometer_plugin' filename='libgazebo_barometer_plugin.so'>
      <robotNamespace/>
      <pubRate>50</pubRate>
      <baroTopic>/baro</baroTopic>
      <baroDriftPaPerSec>0</baroDriftPaPerSec>
    </plugin>

    <!-- Mavlink Plugin-->
    <plugin name='mavlink_interface' filename='libgazebo_mavlink_interface.so'>
      <robotNamespace/>
      <imuSubTopic>/imu</imuSubTopic>
      <magSubTopic>/mag</magSubTopic>
      <baroSubTopic>/baro</baroSubTopic>
      <mavlink_addr>INADDR_ANY</mavlink_addr>
      <mavlink_udp_port>14560</mavlink_udp_port>
      <mavlink_tcp_port>4560</mavlink_tcp_port>
      <serialEnabled>0</serialEnabled>
      <serialDevice>/dev/ttyACM0</serialDevice>
      <baudRate>921600</baudRate>
      <qgc_addr>INADDR_ANY</qgc_addr>
      <qgc_udp_port>14550</qgc_udp_port>
      <sdk_addr>INADDR_ANY</sdk_addr>
      <sdk_udp_port>14540</sdk_udp_port>
      <hil_mode>0</hil_mode>
      <hil_state_level>0</hil_state_level>
      <vehicle_is_tailsitter>0</vehicle_is_tailsitter>
      <send_vision_estimation>0</send_vision_estimation>
      <send_odometry>1</send_odometry>
      <enable_lockstep>1</enable_lockstep>
      <use_tcp>1</use_tcp>
      <motorSpeedCommandPubTopic>/gazebo/command/motor_speed</motorSpeedCommandPubTopic>
      <control_channels>
        <channel name='rotor1'>
          <input_index>0</input_index>
          <input_offset>0</input_offset>
          <input_scaling>1000</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>100</zero_position_armed>
          <joint_control_type>velocity</joint_control_type>
        </channel>
        <channel name='rotor2'>
          <input_index>1</input_index>
          <input_offset>0</input_offset>
          <input_scaling>1000</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>100</zero_position_armed>
          <joint_control_type>velocity</joint_control_type>
        </channel>
        <channel name='rotor3'>
          <input_index>2</input_index>
          <input_offset>0</input_offset>
          <input_scaling>1000</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>100</zero_position_armed>
          <joint_control_type>velocity</joint_control_type>
        </channel>
        <channel name='rotor4'>
          <input_index>3</input_index>
          <input_offset>0</input_offset>
          <input_scaling>1000</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>100</zero_position_armed>
          <joint_control_type>velocity</joint_control_type>
        </channel>
      </control_channels>
    </plugin>
    <!--<static>0</static> -->

    <!-- IMU plugin-->
    <plugin name='rotors_gazebo_imu_plugin' filename='libgazebo_imu_plugin.so'>
      <robotNamespace/>
      <linkName>imu_link</linkName>
      <imuTopic>/imu</imuTopic>
      <gyroscopeNoiseDensity>0.00018665</gyroscopeNoiseDensity>
      <gyroscopeRandomWalk>3.8785e-05</gyroscopeRandomWalk>
      <gyroscopeBiasCorrelationTime>1000.0</gyroscopeBiasCorrelationTime>
      <gyroscopeTurnOnBiasSigma>0.0087</gyroscopeTurnOnBiasSigma>
      <accelerometerNoiseDensity>0.00186</accelerometerNoiseDensity>
      <accelerometerRandomWalk>0.006</accelerometerRandomWalk>
      <accelerometerBiasCorrelationTime>300.0</accelerometerBiasCorrelationTime>
      <accelerometerTurnOnBiasSigma>0.196</accelerometerTurnOnBiasSigma>
    </plugin>

  </model>
</sdf>
